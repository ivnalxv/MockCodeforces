{"remainingRequest":"C:\\Stuff\\ITMO 2.0\\Semester-03\\web\\HW-11\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Stuff\\ITMO 2.0\\Semester-03\\web\\HW-11\\frontend\\src\\App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Stuff\\ITMO 2.0\\Semester-03\\web\\HW-11\\frontend\\src\\App.vue","mtime":1640266531806},{"path":"C:\\Stuff\\ITMO 2.0\\Semester-03\\web\\HW-11\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1640176458651},{"path":"C:\\Stuff\\ITMO 2.0\\Semester-03\\web\\HW-11\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1640176460570},{"path":"C:\\Stuff\\ITMO 2.0\\Semester-03\\web\\HW-11\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1640176459526},{"path":"C:\\Stuff\\ITMO 2.0\\Semester-03\\web\\HW-11\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1640176458015},{"path":"C:\\Stuff\\ITMO 2.0\\Semester-03\\web\\HW-11\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1640176459781}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojYXBwIHsKCn0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuHA;;AAEA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n    <div id=\"app\">\n        <Header :user=\"user\"/>\n        <Middle :posts=\"posts\" :users=\"users\" :postsComments=\"postsComments\"/>\n        <Footer/>\n    </div>\n</template>\n\n<script>\nimport Header from \"./components/Header\";\nimport Middle from \"./components/Middle\";\nimport Footer from \"./components/Footer\";\nimport axios from \"axios\"\n\n\nfunction validateLength(token, minLength, maxLength, tokenName, errorName, emiter) {\n    if (!token || token.length > maxLength || token.length < minLength) {\n        emiter.$emit(errorName, tokenName + \" should be between \" + minLength + \" and \" + maxLength + \" symbols long\");\n        return false;\n    }\n    return true;\n}\n\nfunction validateLengthRegister(token, minLength, maxLength, tokenName, emiter) {\n    return validateLength(token, minLength, maxLength, tokenName, \"onRegisterValidationError\", emiter);\n}\n\nfunction validateRegister(login, name, password, emiter) {\n    if (!validateLengthRegister(login, 3, 16, \"Login\", emiter)) return false;\n    if (!validateLengthRegister(name, 3, 32, \"Name\", emiter)) return false;\n    if (!validateLengthRegister(password, 8, 32, \"Password\", emiter)) return false;\n    if (!login.match(/^[a-z]+$/)) {\n        emiter.$emit(\"onRegisterValidationError\", \"Login should use only lowercase latin letters\");\n        return false;\n    }\n    return true;\n}\n\nexport default {\n    name: 'App',\n    components: {\n        Footer,\n        Middle,\n        Header\n    },\n    data: function () {\n        return {\n            user: null,\n            posts: [],\n            users: [],\n            postsComments: []\n        }\n    },\n    beforeMount() {\n        if (localStorage.getItem(\"jwt\") && !this.user) {\n            this.$root.$emit(\"onJwt\", localStorage.getItem(\"jwt\"));\n        }\n\n        axios.get(\"/api/1/posts\").then(response => {\n            this.posts = response.data;\n        });\n\n        axios.get(\"/api/1/users\").then(response => {\n            this.users = response.data;\n        });\n    },\n    beforeCreate() {\n        this.$root.$on(\"onEnter\", (login, password) => {\n            if (password === \"\") {\n                this.$root.$emit(\"onEnterValidationError\", \"Password is required\");\n                return;\n            }\n\n            axios.post(\"/api/1/jwt\", {\n                    login, password\n            }).then(response => {\n                localStorage.setItem(\"jwt\", response.data);\n                this.$root.$emit(\"onJwt\", response.data);\n            }).catch(error => {\n                this.$root.$emit(\"onEnterValidationError\", error.response.data);\n            });\n        });\n\n        this.$root.$on(\"onRegister\", (login, name, password) => {\n            if (validateRegister(login, name, password, this.$root)) {\n                axios.post(\"/api/1/users\", {\n                    login, name, password\n                }).then(response => {\n                    localStorage.setItem(\"jwt\", response.data);\n                    this.$root.$emit(\"onJwt\", response.data);\n                }).catch(error => {\n                    this.$root.$emit(\"onRegisterValidationError\", error.response.data);\n                });\n            }\n        });\n\n        this.$root.$on(\"onJwt\", (jwt) => {\n            localStorage.setItem(\"jwt\", jwt);\n\n            axios.get(\"/api/1/users/auth\", {\n                params: {\n                    jwt\n                }\n            }).then(response => {\n                this.user = response.data;\n                this.$root.$emit(\"onChangePage\", \"Index\");\n            }).catch(() => this.$root.$emit(\"onLogout\"))\n        });\n\n        this.$root.$on(\"onLogout\", () => {\n            localStorage.removeItem(\"jwt\");\n            this.user = null;\n        });\n\n    }\n}\n</script>\n\n<style>\n#app {\n\n}\n</style>\n"]}]}